name: Frontend CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test
  test_e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
    -
      name: Docker compose
      uses: isbang/compose-action@v1.5.1
      with:
          compose-file: ".github/workflows/docker-compose.yaml"
          down-flags: "--volumes"
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
    - name: Cache
      if: always()
      uses: actions/cache@v3
      with:
        path: "tests/visual_regression/*.png"
        key: ${{runner.os}}-visual_regression-page_test_tsx_snapshots-${{hashFiles('tests/visual_regression/page.test.tsx-snapshots/*.png')}}
        restore-keys: ${{runner.os}}-visual_regression-page_test_tsx_snapshots
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
